<%- include('../getAll/layout/header.ejs')%>

<section class="container py-5">
    <!-- Loading State -->
    <div id="loading-section" class="text-center py-5">
        <div class="spinner-border text-primary" role="status"></div>
        <div class="mt-3">در حال بارگذاری اطلاعات استاد...</div>
    </div>

    <!-- Teacher Profile Section -->
    <div id="teacher-profile" style="display: none;">
        <div class="row">
            <div class="col-lg-4 col-md-5">
                <div class="card shadow-sm border-0">
                    <div class="card-body text-center p-4">
                        <div class="position-relative mb-4">
                            <img id="teacher-image" src="" class="rounded-circle teacher-profile-image" alt="تصویر استاد">
                            
                        </div>
                        <h3 id="teacher-name" class="fw-bold text-primary mb-2"></h3>
                        <p id="teacher-subjects" class="text-muted mb-3"></p>
                        
                        <div class="teacher-contact-info">
                            <div class="info-item mb-2">
                                <i class="bi bi-telephone text-primary"></i>
                                <span id="teacher-phone"></span>
                            </div>
                            
                        </div>
                    </div>
                </div>
            </div>
            
            <div class="col-lg-8 col-md-7">
                <div class="card shadow-sm border-0 h-100">
                    <div class="card-body p-4">
                        <h4 class="fw-bold text-primary mb-3">
                            <i class="bi bi-info-circle me-2"></i>اطلاعات استاد
                        </h4>
                        
                        <div id="teacher-description" class="teacher-description mb-4"></div>
                        
                        <div class="row">
                            <div class="col-md-6">
                                <h6 class="fw-bold text-secondary mb-2">
                                    <i class="bi bi-book me-2"></i>دروس تدریس
                                </h6>
                                <div id="teaching-subjects-list" class="subjects-container"></div>
                            </div>
                            <div class="col-md-6">
                                <h6 class="fw-bold text-secondary mb-2">
                                    <i class="bi bi-calendar-check me-2"></i>رزرو مشاوره
                                </h6>
                                <button class="btn btn-success btn-sm" onclick="showTeacherScheduleModal()">
                                    <i class="bi bi-calendar-plus me-2"></i>رزرو وقت مشاوره
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Blog Sections -->
    <div id="blog-sections" class="mt-5" style="display: none;">
        <div class="text-center mb-4">
            <h2 class="section-title">
                <i class="bi bi-journal-text me-2"></i>وبلاگ شخصی استاد
            </h2>
            <p class="text-muted">مطالب و مقالات شخصی استاد</p>
        </div>
        
        <div id="blog-content" class="row justify-content-center g-4">
            <!-- Blog sections will be loaded here -->
        </div>
    </div>

    <!-- No Blog Content Message -->
    <div id="no-blog-message" class="text-center mt-5" style="display: none;">
        <div class="alert alert-info">
            <i class="bi bi-info-circle fs-1 mb-3 d-block"></i>
            <h5>هنوز محتوایی اضافه نشده است</h5>
            <p class="text-muted">این استاد هنوز محتوایی در وبلاگ شخصی خود منتشر نکرده است.</p>
        </div>
    </div>
</section>

<!-- Reservation Modal -->
<div class="modal fade" id="reservationModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">رزرو وقت مشاوره</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="reservationForm">
                    <input type="hidden" id="reservationTeacherId">
                    <input type="hidden" id="reservationTimeSlot">
                    
                    <div class="mb-3">
                        <label class="form-label fw-bold">
                            <i class="bi bi-person"></i> استاد انتخاب شده:
                        </label>
                        <div class="alert alert-info" id="selectedTeacherInfo">
                            <!-- اطلاعات استاد اینجا نمایش داده می‌شود -->
                        </div>
                    </div>
                    
                    <div class="mb-3">
                        <label class="form-label fw-bold">
                            <i class="bi bi-calendar3"></i> زمان انتخاب شده:
                        </label>
                        <div class="alert alert-success" id="selectedTimeInfo">
                            <!-- اطلاعات زمان اینجا نمایش داده می‌شود -->
                        </div>
                    </div>
                    
                    <div class="mb-3" id="loginRequiredSection" style="display: none;">
                        <div class="alert alert-warning">
                            <i class="bi bi-exclamation-triangle"></i>
                            <strong>ابتدا وارد حساب کاربری خود شوید</strong>
                            <br>
                            برای رزرو وقت مشاوره، ابتدا باید وارد حساب کاربری خود شوید.
                            <div class="mt-2">
                                <a href="/login" class="btn btn-warning btn-sm">
                                    <i class="bi bi-box-arrow-in-right"></i> ورود به سیستم
                                </a>
                            </div>
                        </div>
                    </div>
                    
                    <div class="mb-3" id="userInfoSection" style="display: none;">
                        <label class="form-label fw-bold">
                            <i class="bi bi-person-badge"></i> اطلاعات دانشجو:
                        </label>
                        <div class="alert alert-info" id="userInfoDisplay">
                            <!-- اطلاعات کاربر اینجا نمایش داده می‌شود -->
                        </div>
                    </div>
                    
                    <div class="mb-3">
                        <label for="reservationDescription" class="form-label fw-bold">
                            <i class="bi bi-chat-text"></i> توضیحات درخواست:
                        </label>
                        <textarea class="form-control" id="reservationDescription" rows="4" 
                                  placeholder="موضوع مشاوره و توضیحات خود را بنویسید..."></textarea>
                        <div class="form-text">توضیح دهید که برای چه موضوعی نیاز به مشاوره دارید</div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                    <i class="bi bi-x-circle"></i> انصراف
                </button>
                <button type="button" class="btn btn-primary" id="submitReservationBtn" onclick="submitReservation()" style="display: none;">
                    <i class="bi bi-check-circle"></i> ثبت رزرو
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Teacher Schedule Modal -->
<div class="modal fade" id="teacherScheduleModal" tabindex="-1">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="teacherScheduleTitle">برنامه هفتگی استاد</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <!-- راهنمای رنگ‌ها -->
                <div class="row mb-3">
                    <div class="col-12">
                        <div class="alert alert-info">
                            <h6 class="mb-2"><i class="bi bi-info-circle"></i> راهنمای رنگ‌ها:</h6>
                            <div class="row g-2">
                                <div class="col-md-3">
                                    <span class="badge bg-success">خالی</span> - زمان در دسترس
                                </div>
                                <div class="col-md-3">
                                    <span class="badge bg-warning text-dark">در حال انتظار</span> - درخواست شما در انتظار تایید
                                </div>
                                <div class="col-md-3">
                                    <span class="badge bg-info">تایید شده</span> - درخواست شما تایید شده
                                </div>
                                <div class="col-md-3">
                                    <span class="badge bg-danger">رد شده</span> - درخواست شما رد شده
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                
                <div class="table-responsive">
                    <table class="table table-bordered text-center">
                        <thead class="table-dark">
                            <tr>
                                <th>ساعت</th>
                                <th>شنبه</th>
                                <th>یکشنبه</th>
                                <th>دوشنبه</th>
                                <th>سه‌شنبه</th>
                                <th>چهارشنبه</th>
                                <th>پنج‌شنبه</th>
                                <th>جمعه</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td class="table-secondary fw-bold">۸-۱۰</td>
                                <td class="teacher-schedule-cell" data-day="0" data-slot="0"></td>
                                <td class="teacher-schedule-cell" data-day="1" data-slot="0"></td>
                                <td class="teacher-schedule-cell" data-day="2" data-slot="0"></td>
                                <td class="teacher-schedule-cell" data-day="3" data-slot="0"></td>
                                <td class="teacher-schedule-cell" data-day="4" data-slot="0"></td>
                                <td class="teacher-schedule-cell" data-day="5" data-slot="0"></td>
                                <td class="teacher-schedule-cell" data-day="6" data-slot="0"></td>
                            </tr>
                            <tr>
                                <td class="table-secondary fw-bold">۱۰-۱۲</td>
                                <td class="teacher-schedule-cell" data-day="0" data-slot="1"></td>
                                <td class="teacher-schedule-cell" data-day="1" data-slot="1"></td>
                                <td class="teacher-schedule-cell" data-day="2" data-slot="1"></td>
                                <td class="teacher-schedule-cell" data-day="3" data-slot="1"></td>
                                <td class="teacher-schedule-cell" data-day="4" data-slot="1"></td>
                                <td class="teacher-schedule-cell" data-day="5" data-slot="1"></td>
                                <td class="teacher-schedule-cell" data-day="6" data-slot="1"></td>
                            </tr>
                            <tr>
                                <td class="table-secondary fw-bold">۱۲-۱۴</td>
                                <td class="teacher-schedule-cell" data-day="0" data-slot="2"></td>
                                <td class="teacher-schedule-cell" data-day="1" data-slot="2"></td>
                                <td class="teacher-schedule-cell" data-day="2" data-slot="2"></td>
                                <td class="teacher-schedule-cell" data-day="3" data-slot="2"></td>
                                <td class="teacher-schedule-cell" data-day="4" data-slot="2"></td>
                                <td class="teacher-schedule-cell" data-day="5" data-slot="2"></td>
                                <td class="teacher-schedule-cell" data-day="6" data-slot="2"></td>
                            </tr>
                            <tr>
                                <td class="table-secondary fw-bold">۱۴-۱۶</td>
                                <td class="teacher-schedule-cell" data-day="0" data-slot="3"></td>
                                <td class="teacher-schedule-cell" data-day="1" data-slot="3"></td>
                                <td class="teacher-schedule-cell" data-day="2" data-slot="3"></td>
                                <td class="teacher-schedule-cell" data-day="3" data-slot="3"></td>
                                <td class="teacher-schedule-cell" data-day="4" data-slot="3"></td>
                                <td class="teacher-schedule-cell" data-day="5" data-slot="3"></td>
                                <td class="teacher-schedule-cell" data-day="6" data-slot="3"></td>
                            </tr>
                            <tr>
                                <td class="table-secondary fw-bold">۱۶-۱۸</td>
                                <td class="teacher-schedule-cell" data-day="0" data-slot="4"></td>
                                <td class="teacher-schedule-cell" data-day="1" data-slot="4"></td>
                                <td class="teacher-schedule-cell" data-day="2" data-slot="4"></td>
                                <td class="teacher-schedule-cell" data-day="3" data-slot="4"></td>
                                <td class="teacher-schedule-cell" data-day="4" data-slot="4"></td>
                                <td class="teacher-schedule-cell" data-day="5" data-slot="4"></td>
                                <td class="teacher-schedule-cell" data-day="6" data-slot="4"></td>
                            </tr>
                            <tr>
                                <td class="table-secondary fw-bold">۱۸-۲۰</td>
                                <td class="teacher-schedule-cell" data-day="0" data-slot="5"></td>
                                <td class="teacher-schedule-cell" data-day="1" data-slot="5"></td>
                                <td class="teacher-schedule-cell" data-day="2" data-slot="5"></td>
                                <td class="teacher-schedule-cell" data-day="3" data-slot="5"></td>
                                <td class="teacher-schedule-cell" data-day="4" data-slot="5"></td>
                                <td class="teacher-schedule-cell" data-day="5" data-slot="5"></td>
                                <td class="teacher-schedule-cell" data-day="6" data-slot="5"></td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">بستن</button>
            </div>
        </div>
    </div>
</div>

<style>
.teacher-profile-image {
    width: 200px;
    height: 200px;
    object-fit: cover;
    border: 4px solid #007bff;
    box-shadow: 0 8px 16px rgba(0,0,0,0.2);
    transition: transform 0.3s ease;
}

.teacher-profile-image:hover {
    transform: scale(1.05);
}

.teacher-status-badge {
    position: absolute;
    bottom: 10px;
    right: 50%;
    transform: translateX(50%);
    background: white;
    border-radius: 50%;
    padding: 8px;
    box-shadow: 0 4px 8px rgba(0,0,0,0.2);
}

.teacher-contact-info {
    background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
    border-radius: 15px;
    padding: 1.5rem;
    margin-top: 1rem;
}

.info-item {
    display: flex;
    align-items: center;
    margin-bottom: 0.75rem;
    font-size: 0.95rem;
}

.info-item i {
    width: 25px;
    margin-left: 0.75rem;
    font-size: 1.1rem;
}

.teacher-description {
    background: white;
    border-radius: 12px;
    padding: 1.5rem;
    border-left: 5px solid #007bff;
    font-style: italic;
    color: #495057;
    line-height: 1.6;
    box-shadow: 0 2px 8px rgba(0,0,0,0.1);
}

.subjects-container {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
}

.subject-badge {
    display: inline-block;
    background: linear-gradient(45deg, #007bff, #0056b3);
    color: white;
    padding: 0.4rem 0.8rem;
    border-radius: 20px;
    font-size: 0.85rem;
    font-weight: 500;
    transition: all 0.3s ease;
}

.subject-badge:hover {
    background: linear-gradient(45deg, #0056b3, #004085);
    transform: translateY(-2px);
    box-shadow: 0 4px 8px rgba(0,0,0,0.2);
}

.blog-section-card {
    border: none;
    border-radius: 0;
    box-shadow: none;
    background: linear-gradient(135deg, #ffffff 0%, #f8f9fa 100%);
    transition: all 0.3s ease;
    overflow: hidden;
    margin-bottom: 0;
}

.blog-section-card:hover {
    transform: none;
    box-shadow: none;
}

.blog-content {
    padding: 1.5rem;
}

.blog-description {
    background: rgba(255,255,255,0.95);
    padding: 12px 16px;
    border-radius: 0;
    margin-top: 15px;
    font-style: italic;
    color: #666;
    border-left: none;
    font-size: 0.9rem;
}

.blog-image {
    max-height: 300px;
    object-fit: cover;
    border-radius: 0;
    box-shadow: none;
}

.blog-file {
    background: linear-gradient(135deg, #fff3cd, #ffeaa7);
    padding: 1.5rem;
    border-radius: 0;
    text-align: center;
    border: none;
}

.blog-file a {
    text-decoration: none;
    color: #856404;
    font-weight: 600;
    transition: color 0.3s ease;
}

.blog-file a:hover {
    color: #533f03;
}

.section-title {
    font-weight: bold;
    margin-bottom: 2rem;
    color: #2d3a4b;
    position: relative;
}

.section-title::after {
    content: '';
    position: absolute;
    bottom: -10px;
    left: 50%;
    transform: translateX(-50%);
    width: 60px;
    height: 3px;
    background: linear-gradient(45deg, #007bff, #0056b3);
    border-radius: 2px;
}

.blog-section-title {
    background: linear-gradient(135deg, #007bff, #0056b3);
    color: white;
    padding: 15px 20px;
    margin: -1.5rem -1.5rem 1rem -1.5rem;
    border-radius: 0;
    text-align: center;
}

.blog-section-title h4 {
    margin: 0;
    font-weight: bold;
    font-size: 1.2rem;
}

@media (max-width: 768px) {
    .teacher-profile-image {
        width: 150px;
        height: 150px;
    }
    
    .teacher-contact-info {
        padding: 1rem;
    }
    
    .blog-content {
        padding: 1rem;
    }
}

/* Schedule Cell Styles */
.teacher-schedule-cell { 
    transition: background-color 0.2s; 
    min-height: 60px;
    vertical-align: middle;
    cursor: pointer;
}
.teacher-schedule-cell:hover { 
    background-color: #e9ecef !important; 
    transform: scale(1.05);
}
.teacher-schedule-cell.available { 
    background-color: #d4edda !important; 
    border: 2px solid #28a745;
}
.teacher-schedule-cell.busy { 
    background-color: #f8d7da !important; 
    border: 2px solid #dc3545;
}
.teacher-schedule-cell.pending { 
    background-color: #fff3cd !important; 
    border: 2px solid #ffc107;
}
.teacher-schedule-cell.approved { 
    background-color: #d1ecf1 !important; 
    border: 2px solid #17a2b8;
}
.teacher-schedule-cell.rejected { 
    background-color: #f8d7da !important; 
    border: 2px solid #dc3545;
}
.teacher-schedule-cell.cancelled { 
    background-color: #e2e3e5 !important; 
    border: 2px solid #6c757d;
}
</style>

<script>
let teacherId = null;
let teacherData = null;
let blogSections = [];

document.addEventListener('DOMContentLoaded', function() {
    // دریافت ID استاد از URL
    const urlParams = new URLSearchParams(window.location.search);
    teacherId = urlParams.get('id') || window.location.pathname.split('/').pop();
    
    if (teacherId) {
        loadTeacherData();
    } else {
        showError('شناسه استاد یافت نشد');
    }
});

async function loadTeacherData() {
    try {
        // دریافت اطلاعات استاد
        const teacherResponse = await apiRequest(`/teacher/${teacherId}`, 'GET');
        if (!teacherResponse || !teacherResponse.success) {
            showError('خطا در دریافت اطلاعات استاد');
            return;
        }
        
        teacherData = teacherResponse.data;
        renderTeacherProfile();
        
        // دریافت وبلاگ استاد
        await loadTeacherBlog();
        
        // Initialize reservation system after teacher data is loaded
        await initializeReservationSystem();
        
    } catch (error) {
        console.error('خطا در بارگذاری اطلاعات:', error);
        showError('خطا در ارتباط با سرور');
    }
}

function renderTeacherProfile() {
    const teacher = teacherData;
    
    // تنظیم تصویر
    const teacherImage = document.getElementById('teacher-image');
    teacherImage.src = teacher.personalImage && teacher.personalImage !== 'null' 
        ? teacher.personalImage 
        : 'https://randomuser.me/api/portraits/lego/1.jpg';
    
    // تنظیم نام
    document.getElementById('teacher-name').textContent = `${teacher.firstName} ${teacher.lastName}`;
    
    // تنظیم شماره تلفن
    document.getElementById('teacher-phone').textContent = teacher.phone || 'تعریف نشده';
    
    
    // تنظیم دروس تدریس
    const subjectsContainer = document.getElementById('teaching-subjects-list');
    if (teacher.teachingSubjects) {
        const subjects = teacher.teachingSubjects.split(',').map(s => s.trim()).filter(s => s.length > 0);
        if (subjects.length > 0) {
            subjectsContainer.innerHTML = subjects.map(subject => 
                `<span class="subject-badge">${subject}</span>`
            ).join('');
        } else {
            subjectsContainer.innerHTML = '<span class="text-muted">تعریف نشده</span>';
        }
    } else {
        subjectsContainer.innerHTML = '<span class="text-muted">تعریف نشده</span>';
    }
    
    // تنظیم توضیحات
    const descriptionContainer = document.getElementById('teacher-description');
    if (teacher.description) {
        descriptionContainer.innerHTML = `
            <i class="bi bi-chat-quote me-2"></i>
            ${teacher.description}
        `;
    } else {
        descriptionContainer.innerHTML = `
            <div class="text-muted text-center">
                <i class="bi bi-info-circle me-2"></i>
                توضیحی برای این استاد ثبت نشده است.
            </div>
        `;
    }
    
    // نمایش بخش پروفایل
    document.getElementById('loading-section').style.display = 'none';
    document.getElementById('teacher-profile').style.display = 'block';
}

async function loadTeacherBlog() {
    try {
        const blogResponse = await apiRequest(`/teacher-meta/${teacherId}?published=true`, 'GET');
        
        if (blogResponse && blogResponse.success && Array.isArray(blogResponse.data) && blogResponse.data.length > 0) {
            blogSections = blogResponse.data.filter(section => section.isPublished);
            renderBlogSections();
        } else {
            showNoBlogMessage();
        }
    } catch (error) {
        console.error('خطا در بارگذاری وبلاگ:', error);
        showNoBlogMessage();
    }
}

function renderBlogSections() {
    const blogContent = document.getElementById('blog-content');
    let html = '';
    
    blogSections.forEach(section => {
        let content = '';
        
        switch (section.type) {
            case 'text':
                content = `
                    <div class="blog-text-content">
                        <i class="bi bi-file-text me-2 text-primary"></i>
                        <div class="mt-3">
                            ${section.textContent || ''}
                        </div>
                    </div>
                `;
                break;
                
            case 'image':
                content = `
                    <div class="text-center">
                        <img src="${section.imagePath}" alt="تصویر وبلاگ" class="blog-image img-fluid">
                    </div>
                `;
                break;
                
            case 'file':
                const fileName = section.filePath ? section.filePath.split('/').pop() : 'فایل';
                content = `
                    <div class="blog-file">
                        <i class="bi bi-file-earmark-arrow-down fs-1 mb-3 d-block text-warning"></i>
                        <a href="${section.filePath}" target="_blank" download class="d-block">
                            <i class="bi bi-download me-2"></i>دانلود ${fileName}
                        </a>
                    </div>
                `;
                break;
        }
        
        html += `
            <div class="col-12 col-lg-8">
                <div class="card blog-section-card">
                    <div class="blog-content">
                        ${section.title ? `
                            <div class="blog-section-title">
                                <h4 class="mb-3"><i class="bi bi-tag me-2"></i>${section.title}</h4>
                            </div>
                        ` : ''}
                        ${section.description}
                        ${content ? `
                            <div class="blog-description">
                                ${content}
                            </div>
                        ` : ''}
                    </div>
                </div>
            </div>
        `;
    });
    
    blogContent.innerHTML = html;
    document.getElementById('blog-sections').style.display = 'block';
}

function showNoBlogMessage() {
    document.getElementById('no-blog-message').style.display = 'block';
}

function showError(message) {
    document.getElementById('loading-section').innerHTML = `
        <div class="alert alert-danger">
            <i class="bi bi-exclamation-triangle me-2"></i>
            ${message}
        </div>
    `;
}

// Global variables for reservation system
let currentUser = null;
let userReservations = [];
let selectedTeacherId = null;

// Bootstrap modal instances
let reservationModal = null;
let teacherScheduleModal = null;

// Initialize reservation system
async function initializeReservationSystem() {
    try {
        // Initialize Bootstrap modals
        reservationModal = new bootstrap.Modal(document.getElementById('reservationModal'));
        teacherScheduleModal = new bootstrap.Modal(document.getElementById('teacherScheduleModal'));
        
        // Check if user is logged in
        const userResponse = await apiRequest('/auth/me', 'GET');
        if (userResponse && userResponse.success && userResponse.data && userResponse.data.user) {
            currentUser = userResponse.data.user;
            
            // Load user reservations if student
            if (currentUser.type === 'student') {
                try {
                    const reservationsResponse = await apiRequest(`/reservations/student/${currentUser.id}`, 'GET');
                    if (reservationsResponse && reservationsResponse.success) {
                        userReservations = reservationsResponse.data || [];
                    }
                } catch (error) {
                    console.log('خطا در دریافت درخواست‌های رزرو:', error);
                    userReservations = [];
                }
            }
        }
    } catch (error) {
        console.log('خطا در بررسی وضعیت کاربر:', error);
    }
}

// Show teacher schedule modal
function showTeacherScheduleModal() {
    selectedTeacherId = teacherId;
    document.getElementById('teacherScheduleTitle').textContent = `برنامه هفتگی ${teacherData.firstName} ${teacherData.lastName}`;
    
    // Update teacher schedule table
    updateTeacherScheduleTable(teacherData);
    
    teacherScheduleModal.show();
}

// Update teacher schedule table
function updateTeacherScheduleTable(teacher) {
    document.querySelectorAll('.teacher-schedule-cell').forEach(cell => {
        const day = parseInt(cell.dataset.day);
        const slot = parseInt(cell.dataset.slot);
        const position = (day * 6) + slot;
        
        cell.className = 'teacher-schedule-cell';
        
        // Check user reservation status for this teacher and time
        let reservationStatus = null;
        if (currentUser && currentUser.type === 'student') {
            const userReservation = userReservations.find(r => 
                r.teacherId === teacher.id && r.requestedTimeSlot === position
            );
            if (userReservation) {
                reservationStatus = userReservation.status;
            }
        }
        
        if (teacher.weeklySchedule && teacher.weeklySchedule[position] === '1') {
            // Show reservation status
            if (reservationStatus) {
                let statusText = '';
                let statusClass = '';
                
                switch (reservationStatus) {
                    case 'pending':
                        statusText = 'در حال انتظار';
                        statusClass = 'text-warning';
                        cell.classList.add('pending');
                        break;
                    case 'approved':
                        statusText = 'تایید شده';
                        statusClass = 'text-success';
                        cell.classList.add('approved');
                        break;
                    case 'rejected':
                        statusText = 'رد شده';
                        statusClass = 'text-danger';
                        cell.classList.add('rejected');
                        break;
                    case 'cancelled':
                        statusText = 'لغو شده';
                        statusClass = 'text-secondary';
                        cell.classList.add('cancelled');
                        break;
                }
                
                cell.innerHTML = `<small class="fw-bold ${statusClass}">${statusText}</small>`;
            } else {
                cell.classList.add('available');
                cell.innerHTML = '<small class="text-success fw-bold">خالی</small>';
            }
        } else {
            // Show reservation status even if time is busy
            if (reservationStatus) {
                let statusText = '';
                let statusClass = '';
                
                switch (reservationStatus) {
                    case 'pending':
                        statusText = 'در حال انتظار';
                        statusClass = 'text-warning';
                        cell.classList.add('pending');
                        break;
                    case 'approved':
                        statusText = 'تایید شده';
                        statusClass = 'text-success';
                        cell.classList.add('approved');
                        break;
                    case 'rejected':
                        statusText = 'رد شده';
                        statusClass = 'text-danger';
                        cell.classList.add('rejected');
                        break;
                    case 'cancelled':
                        statusText = 'لغو شده';
                        statusClass = 'text-secondary';
                        cell.classList.add('cancelled');
                        break;
                }
                
                cell.innerHTML = `<small class="fw-bold ${statusClass}">${statusText}</small>`;
            } else {
                cell.classList.add('busy');
                cell.innerHTML = '<small class="text-danger fw-bold">مشغول</small>';
            }
        }
    });
    
    // Add click event listeners
    document.querySelectorAll('.teacher-schedule-cell').forEach(cell => {
        cell.onclick = function() {
            const day = parseInt(this.dataset.day);
            const slot = parseInt(this.dataset.slot);
            const position = (day * 6) + slot;
            
            // Check user reservation status
            let reservationStatus = null;
            if (currentUser && currentUser.type === 'student') {
                const userReservation = userReservations.find(r => 
                    r.teacherId === teacher.id && r.requestedTimeSlot === position
                );
                if (userReservation) {
                    reservationStatus = userReservation.status;
                }
            }
            
            // If user already has a pending or approved request, don't allow new reservation
            if (reservationStatus === 'pending' || reservationStatus === 'approved') {
                let message = '';
                if (reservationStatus === 'pending') {
                    message = 'شما قبلاً برای این زمان درخواست داده‌اید و در حال انتظار تایید استاد می‌باشید.';
                } else {
                    message = 'این زمان قبلاً برای شما تایید شده است.';
                }
                showAlert(message, 'info');
                return;
            }
            
            if (teacher.weeklySchedule && teacher.weeklySchedule[position] === '1') {
                showReservationModal(teacher.id, teacher.firstName + ' ' + teacher.lastName, day, slot);
                teacherScheduleModal.hide();
            } else {
                showAlert('این بازه زمانی در دسترس نیست', 'warning');
            }
        };
    });
}

// Show reservation modal
function showReservationModal(teacherId, teacherName, day, slot) {
    const dayNames = ['شنبه', 'یکشنبه', 'دوشنبه', 'سه‌شنبه', 'چهارشنبه', 'پنج‌شنبه', 'جمعه'];
    const timeSlots = ['۸-۱۰', '۱۰-۱۲', '۱۲-۱۴', '۱۴-۱۶', '۱۶-۱۸', '۱۸-۲۰'];
    const timeSlot = (day * 6) + parseInt(slot);
    
    // Fill form information
    document.getElementById('reservationTeacherId').value = teacherId;
    document.getElementById('reservationTimeSlot').value = timeSlot;
    
    // Show teacher information
    document.getElementById('selectedTeacherInfo').innerHTML = `
        <i class="bi bi-person-circle"></i>
        <strong>${teacherName}</strong>
    `;
    
    // Show time information
    document.getElementById('selectedTimeInfo').innerHTML = `
        <i class="bi bi-calendar-event"></i>
        <strong>${dayNames[day]} ساعت ${timeSlots[slot]}</strong>
    `;
    
    // Check user login status
    if (currentUser && currentUser.type === 'student') {
        // User is logged in
        document.getElementById('loginRequiredSection').style.display = 'none';
        document.getElementById('userInfoSection').style.display = 'block';
        document.getElementById('submitReservationBtn').style.display = 'inline-block';
        
        // Show user information
        document.getElementById('userInfoDisplay').innerHTML = `
            <div class="row">
                <div class="col-md-6">
                    <strong>نام:</strong> ${currentUser.firstName} ${currentUser.lastName}
                </div>
                <div class="col-md-6">
                    <strong>شماره دانشجویی:</strong> ${currentUser.studentId}
                </div>
            </div>
        `;
    } else {
        // User is not logged in
        document.getElementById('loginRequiredSection').style.display = 'block';
        document.getElementById('userInfoSection').style.display = 'none';
        document.getElementById('submitReservationBtn').style.display = 'none';
    }
    
    // Clear description field
    document.getElementById('reservationDescription').value = '';
    
    reservationModal.show();
}

// Submit reservation
async function submitReservation() {
    if (!currentUser || currentUser.type !== 'student') {
        showAlert('ابتدا وارد حساب کاربری خود شوید', 'warning');
        return;
    }
    
    const teacherId = document.getElementById('reservationTeacherId').value;
    const timeSlot = document.getElementById('reservationTimeSlot').value;
    const description = document.getElementById('reservationDescription').value.trim();
    
    // Show loading
    const submitBtn = document.getElementById('submitReservationBtn');
    const originalText = submitBtn.innerHTML;
    submitBtn.innerHTML = '<i class="bi bi-hourglass-split"></i> در حال ثبت...';
    submitBtn.disabled = true;
    
    try {
        // Send reservation request
        const reservationData = {
            studentId: currentUser.id,
            teacherId: parseInt(teacherId),
            requestedTimeSlot: parseInt(timeSlot),
            description: description || 'درخواست مشاوره'
        };
        
        const response = await apiRequest('/reservation', 'POST', reservationData);
        
        if (response && response.success) {
            showAlert('رزرو شما با موفقیت ثبت شد و در انتظار تایید استاد می‌باشد.', 'success');
            reservationModal.hide();
            
            // Update user reservations
            try {
                const reservationsResponse = await apiRequest(`/reservations/student/${currentUser.id}`, 'GET');
                if (reservationsResponse && reservationsResponse.success) {
                    userReservations = reservationsResponse.data || [];
                }
            } catch (error) {
                console.log('خطا در بروزرسانی درخواست‌های رزرو:', error);
            }
            
            // Update teacher schedule table
            if (selectedTeacherId) {
                const teacher = teacherData;
                if (teacher) {
                    updateTeacherScheduleTable(teacher);
                }
            }
        } else {
            showAlert(response?.message || 'خطا در ثبت رزرو', 'danger');
        }
        
    } catch (error) {
        console.error('خطا در ثبت رزرو:', error);
        showAlert('خطا در ارتباط با سرور. لطفاً دوباره تلاش کنید.', 'danger');
    } finally {
        // Restore button to normal state
        submitBtn.innerHTML = originalText;
        submitBtn.disabled = false;
    }
}

// Show alert function
function showAlert(message, type = 'info') {
    const alertDiv = document.createElement('div');
    alertDiv.className = `alert alert-${type} alert-dismissible fade show`;
    alertDiv.innerHTML = `
        ${message}
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    `;
    
    // Insert at the top of the page
    const container = document.querySelector('.container');
    container.insertBefore(alertDiv, container.firstChild);
    
    // Auto-remove after 5 seconds
    setTimeout(() => {
        if (alertDiv.parentNode) {
            alertDiv.remove();
        }
    }, 5000);
}

// Initialize reservation system when page loads
// This will be called after teacher data is loaded
</script>

<%- include('../getAll/layout/footer.ejs')%>